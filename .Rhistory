mart <- useMart('ensembl',dataset='hsapiens_gene_ensembl')
annot.tss <- getAnnotation(mart,featureType="TSS")
annot.df <- as.data.frame(annot.tss)
genes <- read.delim("~/Downloads/results (5).txt",header=T)
geneIDs <- as.character(genes$Ensembl.Gene.ID)
annot.df.ROI <- annot.df[match(geneIDs,annot.df$names),]
toDel <- grep("CHR_",annot.df.ROI$space,fixed=T)
annot.df.ROI <- annot.df.ROI[-toDel,]
regionList <- annot.df.ROI[,c(1,2,3,6)]
regionList
windowSize <- 200
seqList <- apply(regionList,1,function(x){
chr <- paste0("chr",as.character(x[1]))
#centerPos <- as.numeric(x[2])
strand <- as.numeric(x[4]) # Do not know the strand actually...
if (strand == 1) {
strnd <- "+"
startPos <- as.numeric(x[2])
endPos <- startPos + windowSize - 1
} else {
strnd <- "-"
endPos <- as.numeric(x[3])
startPos <- endPos - windowSize + 1
}
cat(".")
getSeq(Hsapiens,chr,
startPos,endPos,
strand=strnd,as.character=T)
})
BSgenome.Hsapiens.NCBI.GRCh38
windowSize <- 200
seqList <- apply(regionList,1,function(x){
chr <- paste0("chr",as.character(x[1]))
#centerPos <- as.numeric(x[2])
strand <- as.numeric(x[4]) # Do not know the strand actually...
if (strand == 1) {
strnd <- "+"
startPos <- as.numeric(x[2])
endPos <- startPos + windowSize - 1
} else {
strnd <- "-"
endPos <- as.numeric(x[3])
startPos <- endPos - windowSize + 1
}
cat(".")
getSeq(BSgenome.Hsapiens.NCBI.GRCh38,chr,
startPos,endPos,
strand=strnd,as.character=T)
})
biocLite()
source("http://bioconductor.org/biocLite.R")
biocLite()
write.table(regionList,"~/Desktop/rl.txt",row.names=F,sep="\t",quote=F)
library(ChIPpeakAnno)
library("BSgenome.Hsapiens.NCBI.GRCh38")
regionList <- read.table("~/Desktop/rl.txt",header=T)
regionList
windowSize <- 200
seqList <- apply(regionList,1,function(x){
chr <- paste0("chr",as.character(x[1]))
#centerPos <- as.numeric(x[2])
strand <- as.numeric(x[4]) # Do not know the strand actually...
if (strand == 1) {
strnd <- "+"
startPos <- as.numeric(x[2])
endPos <- startPos + windowSize - 1
} else {
strnd <- "-"
endPos <- as.numeric(x[3])
startPos <- endPos - windowSize + 1
}
cat(".")
getSeq(BSgenome.Hsapiens.NCBI.GRCh38,chr,
startPos,endPos,
strand=strnd,as.character=T)
})
getSeq
BSgenome.Hsapiens.NCBI.GRCh38[[1]]
BSgenome.Hsapiens.NCBI.GRCh38[[X]]
BSgenome.Hsapiens.NCBI.GRCh38[["X"]]
regionList$space <- sapply(as.character(regionList$space),function(x){
paste0("chr",x)
})
regionList
write.table(regionList,"~/Desktop/rl.txt",row.names=F,sep="\t",quote=F)
regionList <- regionList[-grep("LRG_",regionList$space,fixed=T),]
regionList
genes
genes <- read.delim("~/Downloads/results (5).txt",header=T)
geneIDs <- as.character(genes$Ensembl.Gene.ID)
geneIDs
genes
regionList
mart <- useMart('ensembl',dataset='hsapiens_gene_ensembl')
annot.tss <- getAnnotation(mart,featureType="TSS")
annot.df <- as.data.frame(annot.tss)
genes <- read.delim("~/Downloads/results (5).txt",header=T)
geneIDs <- as.character(genes$Ensembl.Gene.ID)
annot.df.ROI <- annot.df[match(geneIDs,annot.df$names),]
regionList <- annot.df.ROI[,c(1,2,3,6)]
regionList
dim(regionList)
dim(genes)
regionList$space <- sapply(as.character(regionList$space),function(x){
paste0("chr",x)
})
toDel <- grep("CHR_",annot.df.ROI$space,fixed=T)
toDel <- c(toDel,grep("LRG_",annot.df.ROI$space,fixed=T))
toDel
regionList[-toDel,]
names(annot.df.ROI)
regionList <- regionList[-toDel,]
write.table(regionList,"~/Desktop/rl.txt",row.names=F,sep="\t",quote=F)
windowSize <- 200
seqList <- apply(regionList,1,function(x){
chr <- as.character(x[1])
#centerPos <- as.numeric(x[2])
strand <- as.numeric(x[4]) # Do not know the strand actually...
if (strand == 1) {
strnd <- "+"
startPos <- as.numeric(x[2])
endPos <- startPos + windowSize - 1
} else {
strnd <- "-"
endPos <- as.numeric(x[3])
startPos <- endPos - windowSize + 1
}
c(chr,as.character(startPos),as.character(endPos),strnd)
cat(".")
#   getSeq(BSgenome.Hsapiens.NCBI.GRCh38,chr,
#          startPos,endPos,
#          strand=strnd,as.character=T)
})
seqList
strand
regionList
seqList <- apply(regionList,1,function(x){
chr <- as.character(x[1])
#centerPos <- as.numeric(x[2])
strandSign <- as.numeric(x[4]) # Do not know the strand actually...
if (strandSign == 1) {
strnd <- "+"
startPos <- as.numeric(x[2])
endPos <- startPos + windowSize - 1
} else {
strnd <- "-"
endPos <- as.numeric(x[3])
startPos <- endPos - windowSize + 1
}
c(chr,as.character(startPos),as.character(endPos),strnd)
cat(".")
#   getSeq(BSgenome.Hsapiens.NCBI.GRCh38,chr,
#          startPos,endPos,
#          strand=strnd,as.character=T)
})
seqList
chr
regionList
regionList[1,]
seqList <- apply(matrix(regionList),1,function(x){
chr <- as.character(x[1])
#centerPos <- as.numeric(x[2])
strandSign <- as.numeric(x[4]) # Do not know the strand actually...
if (strandSign == 1) {
strnd <- "+"
startPos <- as.numeric(x[2])
endPos <- startPos + windowSize - 1
} else {
strnd <- "-"
endPos <- as.numeric(x[3])
startPos <- endPos - windowSize + 1
}
c(chr,as.character(startPos),as.character(endPos),strnd)
cat(".")
#   getSeq(BSgenome.Hsapiens.NCBI.GRCh38,chr,
#          startPos,endPos,
#          strand=strnd,as.character=T)
})
seqList <- apply(as.matrix(regionList),1,function(x){
chr <- as.character(x[1])
#centerPos <- as.numeric(x[2])
strandSign <- as.numeric(x[4]) # Do not know the strand actually...
if (strandSign == 1) {
strnd <- "+"
startPos <- as.numeric(x[2])
endPos <- startPos + windowSize - 1
} else {
strnd <- "-"
endPos <- as.numeric(x[3])
startPos <- endPos - windowSize + 1
}
c(chr,as.character(startPos),as.character(endPos),strnd)
cat(".")
#   getSeq(BSgenome.Hsapiens.NCBI.GRCh38,chr,
#          startPos,endPos,
#          strand=strnd,as.character=T)
})
seqList
seqList <- apply((regionList),1,function(x){
chr <- as.character(x[1])
#centerPos <- as.numeric(x[2])
strandSign <- as.numeric(x[4]) # Do not know the strand actually...
if (strandSign == 1) {
strnd <- "+"
startPos <- as.numeric(x[2])
endPos <- startPos + windowSize - 1
} else {
strnd <- "-"
endPos <- as.numeric(x[3])
startPos <- endPos - windowSize + 1
}
c(chr,as.character(startPos),as.character(endPos),strnd)
#cat(".")
#   getSeq(BSgenome.Hsapiens.NCBI.GRCh38,chr,
#          startPos,endPos,
#          strand=strnd,as.character=T)
})
seqList
rgn.df <- do.call(rbind.data.frame,seqList)
rgn.df <- t(seqList)
rgn.df
write.table(rgn.df,"~/Desktop/rgn.txt",row.names=F,sep="\t",quote=F)
getSequence()
getSequence(mart = mart)
?getSequence
chr="chr1"
startPos = rgn.df[1,2]
endPos = rgn.df[1,3]
getSequence(mart,chromosome = chr,start=startPos,end=endPos,seqType = "genomic")
mart
getSequence(ensembl,chromosome = chr,start=startPos,end=endPos,seqType = "genomic")
getSequence(mart="ensembl",chromosome = chr,start=startPos,end=endPos,seqType = "genomic")
getSequence(mart=useMart,chromosome = chr,start=startPos,end=endPos,seqType = "genomic")
mart <- useMart('ensembl',dataset='hsapiens_gene_ensembl')
getSequence(mart=mart,chromosome = chr,start=startPos,end=endPos,seqType = "genomic")
getSequence(mart=mart,chromosome = chr,start=startPos,end=endPos,seqType = "gene_exon")
head(genes)
getSequence(mart=mart,id="ENSG00000154175",seqType = "gene_exon")
getSequence(mart=mart,id="ENSG00000154175",type="ensembl",seqType = "gene_exon")
listFilters()
listFilters(mart)
getSequence(mart=mart,id="ENSG00000154175",type="ens_hs_gene",seqType = "gene_exon")
head(genes)
getSequence(mart=mart,id="ENSG00000157766",type="ens_hs_gene",seqType = "gene_exon")
getSequence(mart=mart,id="ENSG00000157766",type="ens_hs_gene",seqType = "gene_exon"getS)
getSeq
getSeq(BSgenome.Hsapiens.NCBI.GRCh38)
getSeq(Mmusculs)
library("BSgenome.Mmusculus.UCSC.mm9")
getSeq(Mmusculus)
# source("http://bioconductor.org/biocLite.R")
# biocLite("BSgenome.Hsapiens.NCBI.GRCh38")
library(ChIPpeakAnno)
library("BSgenome.Hsapiens.NCBI.GRCh38")
regionList <- read.table("~/Desktop/rl.txt",header=T)
regionList
BSgenome.Hsapiens.NCBI.GRCh38
regionList
seqList <- apply((regionList),1,function(x){
chr <- as.character(x[1])
#centerPos <- as.numeric(x[2])
strandSign <- as.numeric(x[4]) # Do not know the strand actually...
if (strandSign == 1) {
strnd <- "+"
startPos <- as.numeric(x[2])
endPos <- startPos + windowSize - 1
} else {
strnd <- "-"
endPos <- as.numeric(x[3])
startPos <- endPos - windowSize + 1
}
#c(chr,as.character(startPos),as.character(endPos),strnd)
cat(".")
getSeq(BSgenome.Hsapiens.NCBI.GRCh38,chr,
startPos,endPos,
strand=strnd,as.character=T)
})
windowSize <- 200
seqList <- apply((regionList),1,function(x){
chr <- as.character(x[1])
#centerPos <- as.numeric(x[2])
strandSign <- as.numeric(x[4]) # Do not know the strand actually...
if (strandSign == 1) {
strnd <- "+"
startPos <- as.numeric(x[2])
endPos <- startPos + windowSize - 1
} else {
strnd <- "-"
endPos <- as.numeric(x[3])
startPos <- endPos - windowSize + 1
}
#c(chr,as.character(startPos),as.character(endPos),strnd)
cat(".")
getSeq(BSgenome.Hsapiens.NCBI.GRCh38,chr,
startPos,endPos,
strand=strnd,as.character=T)
})
chr
names(BSgenome.Hsapiens.NCBI.GRCh38)
mart <- useMart('ensembl',dataset='hsapiens_gene_ensembl')
annot.tss <- getAnnotation(mart,featureType="TSS")
annot.df <- as.data.frame(annot.tss)
genes <- read.delim("~/Downloads/results (5).txt",header=T)
geneIDs <- as.character(genes$Ensembl.Gene.ID)
annot.df.ROI <- annot.df[match(geneIDs,annot.df$names),]
annot.df.ROI <- annot.df.ROI[-toDel,]
regionList <- annot.df.ROI[,c(1,2,3,6)]
regionList
names(BSgenome.Hsapiens.NCBI.GRCh38)
toDel <- grep("CHR_",annot.df.ROI$space,fixed=T)
toDel <- c(toDel,grep("LRG_",annot.df.ROI$space,fixed=T))
regionList <- regionList[-toDel,]
regionList
windowSize <- 200
seqList <- apply((regionList),1,function(x){
chr <- as.character(x[1])
#centerPos <- as.numeric(x[2])
strandSign <- as.numeric(x[4]) # Do not know the strand actually...
if (strandSign == 1) {
strnd <- "+"
startPos <- as.numeric(x[2])
endPos <- startPos + windowSize - 1
} else {
strnd <- "-"
endPos <- as.numeric(x[3])
startPos <- endPos - windowSize + 1
}
#c(chr,as.character(startPos),as.character(endPos),strnd)
cat(".")
getSeq(BSgenome.Hsapiens.NCBI.GRCh38,chr,
startPos,endPos,
strand=strnd,as.character=T)
})
seqList
names(regionList)
rownames(regionList)
rownames(regionList)==names(seqList)
regionList <- annot.df.ROI[,c(1,2,3,6)]
regionList
regionList$seq = c()
regionList
regionList$seq = rep(" ",nrow(regionList))
head(regionList)
regionList[names(seqList),"seq"] <- unlist(seq)
seq
regionList[names(seqList),"seq"] <- unlist(seqList)
regionList
show(regionList)
write.table(regionList,"~/Desktop/rl.txt",row.names=F,sep="\t",quote=F)
head(annot.df.ROI)
head(genes)
head(annot.df.ROI)
regionList <- annot.df.ROI[,c(1,2,3,5,6)]
regionList$names=genes$HGNC.symbol
head(regionList)
regionList[names(seqList),"seq"] <- unlist(seq)
regionList[names(seqList),"seq"] <- unlist(seqList)
write.table(regionList,"~/Desktop/rl.txt",row.names=F,sep="\t",quote=F)
library(seqRFLP)
regionList <- regionList[complete.cases(regionList),]
regionList
temp <- regionList[,c("names","seq")]
library(seqRFLP)
seq.df <- dataframe2fas(temp,"~/Desktop/emanuel.fa")
installed.genomes()
installed.packages
installed.packages()
.libPaths()
a = read.delim("/Users/apple/Data/HemannLab/yadira/ALL_samples_norm.tbl",header=T,row.names=1)
dim(a)
head(a)
a = a[,13:15]
head(a)
a = rowMeans(a)
head(a)
hist(a)
hist(log2(a))
grep("CTNNB1",names(a))
grep("Aldo",names(a))
a[grep("Aldo",names(a))]
a[grep("Aldoc",names(a))]
quantile(647.5018,a)
?quantile
quantile(a)
quantile(log2(a))
log2(a["Aldoc"])
log2(a["Ctnnd1"])
log2(a["Ctsa"])
log2(a["Gabarap"])
log2(a["Ldha"])
log2(a["Ndh2"])
log2(a["Mdh2"])
log2(a["Strada"])
log2(a["Suclg"])
log2(a["Suclg2"])
log2(a["Vcp"])
log2(a[c("Vcp","Suclg2","Strada","Mdh2","Lhda","Gabarap","Ctsa")])
log2(a[c("Vcp","Suclg2","Strada","Mdh2","Lhda","Gabarap","Ctsa","Ctnnd1","Aldoc")])
log2(a[c("Vcp","Suclg2","Strada","Mdh2","Lhd","Gabarap","Ctsa","Ctnnd1","Aldoc")])
log2(a[c("Vcp","Suclg2","Strada","Mdh2","Lhda","Gabarap","Ctsa","Ctnnd1","Aldoc")])
log2(a[c("Vcp","Suclg2","Strada","Mdh2","Ldha","Gabarap","Ctsa","Ctnnd1","Aldoc")])
library(shiny)
install.packages("shiny")
library(shiny)
runGitHub('seqCropper','salamandastron')
library(shiny)
runGitHub('seqCropper','salamandastron')
library(GEOquery)
aaa=getGEO("GSE66072")
mmm=exprs(aaa[[1]])
MCF7=mmm[,"GSM1613873","GSM1613874","GSM1613875"]
MCF7=mmm[,c("GSM1613873","GSM1613874","GSM1613875")]
MDA = mmm[,c("GSM1613879","GSM1613880","GSM1613881")]
xx <- as.list(hgu133plus2ALIAS2PROBE)
library(hgu133plus2.db)
xx <- as.list(hgu133plus2ALIAS2PROBE)
apc = xx[["APC"]]
apc
intersect(rownames(MCF7),apc)
colMeans(MCF7[apc,])
colMeans(MDA[apc,])
a=colMeans(MCF7[apc,])
b=colMeans(MDA[apc,])
t.test(a,b)
MCF7[apc,]
MDA[apc,]
rowMeans(MCF7[apc,])
rowMeans(MDA[apc,])
a = read.delim("~/MyGoogleDrive/HemannLab/cloudData/RNA-seq/RSEM_results/PC12_translationMachineryExprs.txt",header=T,row.names=1)
dim(a)
library(gplots)
myheatmapfun <- colorRampPalette(c(rgb(15,61,111,maxColorValue=255),
rgb(125,182,212,maxColorValue=255),
rgb(231,224,219,maxColorValue=255),
rgb(234,145,118,maxColorValue=255),
rgb(102,3,32,maxColorValue=255)))
heatmap(a)
heatmap.2(data.matrix(a),
Colv=NA,
#Rowv=NA,
hclustfun=function(x){hclust(x,method="average")},
scale="none",
density.info="none", trace="none",
col=myheatmapfun(75),
cexCol = 0.7,
srtCol = 45,
offsetCol = -0.8,
key.title=NA,
key.xlab=NA,
lhei=c(1,8),
margins=c(10,10),
breaks=seq(0,4,length.out=76)
#breaks=c(seq(0,2,length.out=66),seq(2.01,4,length.out=10)),
#labRow="",labCol=colnames(clusterMat))
)
fc <- rowMeans(a[,1:2]) - rowMeans(a[,3:4])
fc
plot(sort(fc))
text(names(fc))
plot(sort(fc),text=names(fc))
text(1:20,fc,names(fc))
plot(sort(fc),text=names(fc))
plot(sort(fc)
)
text(1:20,sort(fc),names(sort(fc)))
log2(1.5)
fc>0.6
fc[fc>0.6]
2^1.2
a = rt(10000,8)
hist(a)
hist(a,breaks=1000)
a = rt(1000000,8)
hist(a,breaks=1000)
hist(a,breaks=1000,density=T)
hist(a,breaks=1000,freq = F)
a = read.delim("~/MyGoogleDrive/HemannLab/cloudData/RNA-seq/RSEM_results/PC12_translationMachineryExprs.txt",header=T,row.names=1)
rowMeans(a[,1:2]-rowMeans(a[,3:4]))
sort(rowMeans(a[,1:2]-rowMeans(a[,3:4])))
2^0.3
2^0.33
2^0.54
69 %% 29
69 %/% 29
69 %/% 12
69 %% 12
d
s
c
C
####### Please un-comment the following lines if you do not have ######
####### the specified packages installed. #############################
# source("http://bioconductor.org/biocLite.R")
# biocLite("RCytoscape")
# install.packages("igraph")
# install.packages("shiny")
# install.packages("devtools")
# devtools::install_github("shiny-incubator", "rstudio")
library(shiny)
#library(shinyIncubator)
setwd("~/R/seqCropper/")
runApp("GUI")
runApp("GUI")
runApp("GUI")
?fileInput
input
runApp("GUI")
runApp("GUI")
class(T)
T
F
header
